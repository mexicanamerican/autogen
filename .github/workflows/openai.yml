# This workflow will install Python dependencies and run tests with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OpenAI

on:
  pull_request_target:
    branches: ['main']
    paths:
      - 'autogen/**'
      - 'test/**'
      - 'notebook/agentchat_auto_feedback_from_code_execution.ipynb'
      - 'notebook/agentchat_function_call.ipynb'
      - '.github/workflows/openai.yml'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    environment: openai1
    steps:
      # checkout to pr branch
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages and dependencies
        run: |
          
          python -m pip install --upgrade pip wheel
          pip install -e.
          python -c "import autogen"
          pip install coverage pytest-asyncio pytest-cov
      - name: Install packages for test when needed
        if: matrix.python-version == '3.9'
        run: |
          pip install docker
      - name: Install dependencies for test when needed
        if: matrix.python-version == '3.10'  # test_agentchat_function_call
        run: |
          pip install -e.[mathchat]
      - name: Coverage
        if: matrix.python-version == '3.9'
        
        run: |
          coverage run -a -m pytest test
          coverage --cov-report=xml
echo Gathering coverage report...
cat ./coverage.xml
      - name: Coverage and check notebook outputs
        if: matrix.python-version != '3.9'
        
        run: |
          pip install nbconvert nbformat ipykernel
          coverage run -a -m pytest test/agentchat/test_function_call_groupchat.py
          coverage run -a -m pytest test/test_notebook.py
          coverage xml
echo Coverage report:
          cat "$(pwd)/coverage.xml"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
