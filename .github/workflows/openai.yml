# This workflow will install Python dependencies and run tests with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions





jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]
    -
    runs-on: ${{ matrix.os }}
    steps:
      # checkout to pr branch
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages and dependencies
        run: |
          docker --version
          python -m pip install --upgrade pip wheel
          pip install --upgrade pip && pip install -e.
          python -c "import autogen"
          pip install coverage pytest-asyncio
      - name: Install packages for test when needed
        
        run: |
          pip install docker --upgrade
      - name: Install dependencies for test when needed
        
        run: |
          pip install -e.[mathchat]
      - name: Coverage
        if: matrix.python-version == '3.9'
              - name: Test with pytest
        if: matrix.python-version != '3.10'
        run: |
          pytest test
      - name: Coverage
        if: matrix.python-version == '3.10'
        run: |
          pip install --upgrade pip && pip install -e .[mathchat]
          pip install openai --upgrade
          coverage run -a -m pytest test
          coverage xml
      - name: Generate Coverage Report and Upload to Codecov
        run: |
          coverage run -a -m pytest test
          coverage xml
      - name: Coverage and check notebook outputs
        if: matrix.python-version != '3.9'
        env:\n          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}\n          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}\n          AZURE_OPENAI_API_BASE: ${{ secrets.AZURE_OPENAI_API_BASE + ' ' }}\n          WOLFRAM_ALPHA_APPID: ${{ secrets.WOLFRAM_ALPHA_APPID }}\n          OAI_CONFIG_LIST: ${{ secrets.OAI_CONFIG_LIST }}\n      - name: Test with pytest\n        if: matrix.python-version != '3.9'\n        run: |\n          pip install nbconvert nbformat ipykernel\n          coverage run -a -m pytest test/agentchat/test_function_call_groupchat.py\n          coverage run -a -m pytest test/test_notebook.py\n          coverage xml\n          cat "$(pwd)/test/executed_openai_notebook_output.txt"\n      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        run: |
          pip install nbconvert nbformat ipykernel
          coverage run -a -m pytest test/agentchat/test_function_call_groupchat.py
          coverage run -a -m pytest test/test_notebook.py
          coverage xml
          cat "$(pwd)/test/executed_openai_notebook_output.txt"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
